unit Usuario;

interface

uses
  Controls, ExtCtrls, SysUtils, Variants, Data.DB;


type
  TUsuario = class
  private
    FIdUsuario: string;
    FNomeUsuario: string;
    FSenha: string;
    procedure LimparVariaveis;
    procedure ExecConsulta(p_Where: String);
  public
    constructor Create;
    procedure Consultar;
    procedure ConsultarLogin;
    procedure ConsultarPorSenha;
    procedure Incluir;
    procedure Alterar;

    class function GetUsuarios: TDataSet;
    class function Login(pLoginUsuario, pSenha: String): TDataSet;

    property IdUsuario: string read FIdUsuario write FIdUsuario;
    property NomeUsuario: string read FNomeUsuario write FNomeUsuario;
    property Senha: string read FSenha write FSenha;


  end;

implementation

uses uRotinasDB, uRotinaSis;

constructor TUsuario.Create;
begin
  LimparVariaveis;
end;

procedure TUsuario.LimparVariaveis;
begin
  FIdUsuario := '';
  FNomeUsuario := '';
  FSenha := '';
end;

class function TUsuario.Login(pLoginUsuario, pSenha: String): TDataSet;
var
  wl_Sql: String;
begin
  wl_Sql := 'SELECT ' + '  CodUsuario idUsuario, ' +
    '  LoginUsuario loginUsuario, ' + '  Ativo ativo, ' +
    '  ID_PERFIL idPerfil, ' + '  CONVERT(char, DtCadastro, 103) dtCadastro, ' +
    '  ADMIN_APP adminApp '+
    'FROM Usuario ' + ' WHERE LoginUsuario = ' +
    QuotedStr(UpperCase(pLoginUsuario)) + ' AND SenhaUsuario = ' +
    QuotedStr(pSenha);
  Result := RetornaDadosCDS(wl_Sql);

end;

procedure TUsuario.Consultar;
begin
  Self.ExecConsulta('CodUsuario = ' + VCodUsuario +
    ' and Coalesce(CodUsuario,1) > 0');
end;

procedure TUsuario.ConsultarLogin;
begin
  Self.ExecConsulta('LoginUsuario = ' + QuotedStr(VLoginUsuario));
end;

procedure TUsuario.ConsultarPorSenha;
begin
  Self.ExecConsulta('SenhaUsuario = ' + QuotedStr(VSenhaUsuario));
end;

procedure TUsuario.Incluir;
var
  SqlText: String;
begin
  SqlText :=
    'Insert into Usuario(NomeUsuario, LoginUsuario, SenhaUsuario, Ativo, ' +
    ' Id_Perfil, ADMIN_APP ) Values (';

  if (VNomeUsuario <> '') then
    SqlText := SqlText + QuotedStr(VNomeUsuario)
  else
    SqlText := SqlText + 'Null';
  SqlText := SqlText + ',';

  if (VLoginUsuario <> '') then
    SqlText := SqlText + QuotedStr(VLoginUsuario)
  else
    SqlText := SqlText + 'Null';
  SqlText := SqlText + ',';

  if (VSenhaUsuario <> '') then
    SqlText := SqlText + QuotedStr(VSenhaUsuario)
  else
    SqlText := SqlText + 'Null';
  SqlText := SqlText + ',';

  if (VAtivo <> '') then
    SqlText := SqlText + VAtivo
  else
    SqlText := SqlText + '1';
  {
    SqlText := SqlText + ',';
    if (VDtCadastro <> NULL) then
    SqlText := SqlText + TransfData(VarToDateTime(VDtCadastro))
    else SqlText := SqlText + 'Null';
  }

  SqlText := SqlText + ',';
  if (VId_Perfil <> NULL) then
    SqlText := SqlText + VId_Perfil
  else
    SqlText := SqlText + 'Null';

  SqlText := SqlText + ',';
  if (VAdminApp <> '' ) then
    SqlText := SqlText + VAdminApp
  else SqlText := SqlText + '0';

  SqlText := SqlText + ')';
  ExecutaComando(SqlText);
end;

procedure TUsuario.Alterar;
var
  SqlText: String;
begin
  //
end;

procedure TUsuario.ExecConsulta(p_Where: String);
var
  wl_Sql: String;
begin

  wl_Sql := 'SELECT ID_USUARIO, USUARIO, SENHA ' +
            '  FROM USUARIO  WHERE ' + p_Where;
  With RetornaDadosCDS(wl_Sql) do
  begin
    try
      if not Isempty then
      begin;
        if FieldByName('ID_USUARIO').Isnull then
          FIdUsuario := ''
        else
          FIdUsuario := FieldByName('ID_USUARIO').AsString;

        if FieldByName('USUARIO').AsString = '' then
          FNomeUsuario := ''
        else
          FNomeUsuario := FieldByName('USUARIO').AsString;

        if FieldByName('SENHA').AsString = '' then
          FSenha := ''
        else
          FSenha := FieldByName('SENHA').AsString;
      end
      else
        LimparVariaveis;
    finally
      Free;
    end;
  end;
end;

class function TUsuario.GetUsuarios: TDataSet;
var
  wl_Sql: String;
begin
  wl_Sql := 'SELECT ID_USUARIO, USUARIO, SENHA ' +
            '  FROM USUARIO ';
  Result := RetornaDadosCDS(wl_Sql);
end;

end.
